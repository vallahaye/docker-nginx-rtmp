name: ci

on:
  schedule:
    - cron: '0 1 * * *'

env:
  DOCKER_REPO: vallahaye/nginx-rtmp

defaults:
  run:
    shell: bash

jobs:
  build-push:
    strategy:
      matrix:
        build:
          - tag: mainline-alpine
            file: ./mainline/alpine/Dockerfile
            platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/386,linux/ppc64le,linux/s390x
          - tag: mainline-alpine-perl
            file: ./mainline/alpine-perl/Dockerfile
            platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/386,linux/ppc64le,linux/s390x
          - tag: mainline
            file: ./mainline/debian/Dockerfile
            platforms: linux/amd64,linux/arm/v7,linux/arm64/v8,linux/386,linux/mips64le,linux/ppc64le,linux/s390x
          - tag: mainline-perl
            file: ./mainline/debian-perl/Dockerfile
            platforms: linux/amd64,linux/arm/v7,linux/arm64/v8,linux/386,linux/mips64le,linux/ppc64le,linux/s390x
          - tag: stable-alpine
            file: ./stable/alpine/Dockerfile
            platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          - tag: stable-alpine-perl
            file: ./stable/alpine-perl/Dockerfile
            platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          - tag: stable
            file: ./stable/debian/Dockerfile
            platforms: linux/amd64,linux/arm/v7,linux/arm64/v8,linux/386,linux/mips64le,linux/ppc64le,linux/s390x
          - tag: stable-perl
            file: ./stable/debian-perl/Dockerfile
            platforms: linux/amd64,linux/arm/v7,linux/arm64/v8,linux/386,linux/mips64le,linux/ppc64le,linux/s390x
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup env
        run: |
          echo "CURRENT_DATE_TIME=$(date --iso-8601=seconds)" >> $GITHUB_ENV
          echo "RTMP_VERSION=$(sed -n 's/^RTMP_VERSION=//p' update)" >> $GITHUB_ENV
      - name: Build image tags
        id: build-image-tags
        run: |
          shopt -s extglob
          declare -a IMAGE_TAGS
          if [[ "${DOCKER_TAG}" == "mainline" ]]; then
            IMAGE_TAGS+=("${DOCKER_REPO}:latest")
          fi
          RTMP_MINOR_VERSION="${RTMP_VERSION/%.+([0-9])}"
          RTMP_MAJOR_VERSION="${RTMP_VERSION//.+([0-9])}"
          IMAGE_TAGS+=(
            "${DOCKER_REPO}:${DOCKER_TAG}"
            "${DOCKER_REPO}:${RTMP_VERSION}-${DOCKER_TAG}"
            "${DOCKER_REPO}:${RTMP_MINOR_VERSION}-${DOCKER_TAG}"
            "${DOCKER_REPO}:${RTMP_MAJOR_VERSION}-${DOCKER_TAG}"
          )
          (IFS=,; echo -n "::set-output name=result::${IMAGE_TAGS[*]}")
        env:
          DOCKER_TAG: ${{ matrix.build.tag }}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          build-args: |
            "RTMP_VERSION=${{ env.RTMP_VERSION }}"
            "OCI_IMAGE_CREATED_AT=${{ env.CURRENT_DATE_TIME }}"
          context: .
          file: ${{ matrix.build.file }}
          platforms: ${{ matrix.build.platforms }}
          push: true
          tags: ${{ steps.build-image-tags.outputs.result }}
  update-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ env.DOCKER_REPO }}
